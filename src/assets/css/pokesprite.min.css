@charset "UTF-8";
/*!
 * PokéSprite r120 <https://github.com/msikma/pokesprite>
 * (C) 2014-2017, Michiel Sikma <michiel@sikma.org> and PokéSprite contributors
 * (C) 1995-2017 Nintendo/Creatures Inc./GAME FREAK Inc.
 * For a full list of contributors, view the project commit history.
 * Generated on 2017-01-31 02:15:42.
 */
/** Mixin that sets sprite styling.  This mixin can be used to turn any element into an icon. When calling this function, the optional second argument is a map that can be used to specify which CSS values are set. It may contain any or all of the following values:  img         background-image w           width h           height size        width and height pos         background-position content     sets a non-empty content value (for pseudoelements)  When using this mixin to modify multiple elements, the second argument can be used to minimize the amount of generated CSS code; first set the common values, then add specific traits.  For example, to set an element to show up as Bulbasaur, use: @include pkspr-sprite('bulbasaur'); */
/** Mixin that sets sprite size based on type.  This sets the size of an icon based on the type size variable. The optional second argument is a map that allows you to specify whether to set width, height or both:  w           width h           height size        width and height */
/** Mixin that ensures crisp rendering on modern browsers by setting the resizing algorithm to nearest neighbor. */
/** Mixin that resets the rendering of the sprites back to standard. */
/** Base icon CSS.  The display mode is determined by the element used in the HTML. If a <span> is used, the icon is an inline-block element (like an image). If a <div> is used, the icon is a block element.  The <span> display mode has an alternative display style (via .display-over) that sets the main element to a height of 1px, allowing the icon to be displayed without affecting the line height of the running text.  The icon itself is added to the <i> element inside of the container. The element is added by the JS code. */
.pkspr { -ms-interpolation-mode: nearest-neighbor; image-rendering: -moz-crisp-edges; image-rendering: -webkit-crisp-edges; image-rendering: pixelated; display: inline-block; position: relative; vertical-align: baseline; }
.pkspr > i { background-image: url("pokesprite.png"); content: ' '; width: 41px; height: 31px; background-position: -0px -0px; display: block; }
.pksprspan { display: inline-block; }
.pksprblock { display: block; }
.pksprspan.display-over { height: 1px; vertical-align: middle; }
.pksprspan.display-over > i { position: absolute; top: -20px; left: 0; }
.pkspr.pkspr-faux-right { -moz-transform: scaleX(-1); -o-transform: scaleX(-1); -webkit-transform: scaleX(-1); filter: FlipH; -ms-filter: 'FlipH'; transform: scaleX(-1); }
.pkspr.interpolated { -ms-interpolation-mode: inherit; image-rendering: inherit; }
.pkspr[class*='pkmn-'], .pkspr[class*='pkmn-'] > i { width: 40px; }
.pkspr[class*='pkmn-'], .pkspr[class*='pkmn-'] > i { height: 30px; }
.pkspr[class*='apricorn-'], .pkspr[class*='apricorn-'] > i { width: 32px; }
.pkspr[class*='apricorn-'], .pkspr[class*='apricorn-'] > i { height: 32px; }
.pkspr[class*='battle-item-'], .pkspr[class*='battle-item-'] > i { width: 32px; }
.pkspr[class*='battle-item-'], .pkspr[class*='battle-item-'] > i { height: 32px; }
.pkspr[class*='berry-'], .pkspr[class*='berry-'] > i { width: 32px; }
.pkspr[class*='berry-'], .pkspr[class*='berry-'] > i { height: 32px; }
.pkspr[class*='body-style-'], .pkspr[class*='body-style-'] > i { width: 32px; }
.pkspr[class*='body-style-'], .pkspr[class*='body-style-'] > i { height: 32px; }
.pkspr[class*='etc-'], .pkspr[class*='etc-'] > i { width: 32px; }
.pkspr[class*='etc-'], .pkspr[class*='etc-'] > i { height: 32px; }
.pkspr[class*='ev-item-'], .pkspr[class*='ev-item-'] > i { width: 32px; }
.pkspr[class*='ev-item-'], .pkspr[class*='ev-item-'] > i { height: 32px; }
.pkspr[class*='evo-item-'], .pkspr[class*='evo-item-'] > i { width: 32px; }
.pkspr[class*='evo-item-'], .pkspr[class*='evo-item-'] > i { height: 32px; }
.pkspr[class*='flute-'], .pkspr[class*='flute-'] > i { width: 32px; }
.pkspr[class*='flute-'], .pkspr[class*='flute-'] > i { height: 32px; }
.pkspr[class*='fossil-'], .pkspr[class*='fossil-'] > i { width: 32px; }
.pkspr[class*='fossil-'], .pkspr[class*='fossil-'] > i { height: 32px; }
.pkspr[class*='gem-'], .pkspr[class*='gem-'] > i { width: 32px; }
.pkspr[class*='gem-'], .pkspr[class*='gem-'] > i { height: 32px; }
.pkspr[class*='hm-'], .pkspr[class*='hm-'] > i { width: 32px; }
.pkspr[class*='hm-'], .pkspr[class*='hm-'] > i { height: 32px; }
.pkspr[class*='hold-item-'], .pkspr[class*='hold-item-'] > i { width: 32px; }
.pkspr[class*='hold-item-'], .pkspr[class*='hold-item-'] > i { height: 32px; }
.pkspr[class*='incense-'], .pkspr[class*='incense-'] > i { width: 32px; }
.pkspr[class*='incense-'], .pkspr[class*='incense-'] > i { height: 32px; }
.pkspr[class*='other-item-'], .pkspr[class*='other-item-'] > i { width: 32px; }
.pkspr[class*='other-item-'], .pkspr[class*='other-item-'] > i { height: 32px; }
.pkspr[class*='key-item-'], .pkspr[class*='key-item-'] > i { width: 32px; }
.pkspr[class*='key-item-'], .pkspr[class*='key-item-'] > i { height: 32px; }
.pkspr[class*='mail-'], .pkspr[class*='mail-'] > i { width: 32px; }
.pkspr[class*='mail-'], .pkspr[class*='mail-'] > i { height: 32px; }
.pkspr[class*='medicine-'], .pkspr[class*='medicine-'] > i { width: 32px; }
.pkspr[class*='medicine-'], .pkspr[class*='medicine-'] > i { height: 32px; }
.pkspr[class*='mega-stone-'], .pkspr[class*='mega-stone-'] > i { width: 32px; }
.pkspr[class*='mega-stone-'], .pkspr[class*='mega-stone-'] > i { height: 32px; }
.pkspr[class*='mulch-'], .pkspr[class*='mulch-'] > i { width: 32px; }
.pkspr[class*='mulch-'], .pkspr[class*='mulch-'] > i { height: 32px; }
.pkspr[class*='plate-'], .pkspr[class*='plate-'] > i { width: 32px; }
.pkspr[class*='plate-'], .pkspr[class*='plate-'] > i { height: 32px; }
.pkspr[class*='pokeball-'], .pkspr[class*='pokeball-'] > i { width: 32px; }
.pkspr[class*='pokeball-'], .pkspr[class*='pokeball-'] > i { height: 32px; }
.pkspr[class*='scarf-'], .pkspr[class*='scarf-'] > i { width: 32px; }
.pkspr[class*='scarf-'], .pkspr[class*='scarf-'] > i { height: 32px; }
.pkspr[class*='shard-'], .pkspr[class*='shard-'] > i { width: 32px; }
.pkspr[class*='shard-'], .pkspr[class*='shard-'] > i { height: 32px; }
.pkspr[class*='tm-'], .pkspr[class*='tm-'] > i { width: 32px; }
.pkspr[class*='tm-'], .pkspr[class*='tm-'] > i { height: 32px; }
.pkspr[class*='valuable-item-'], .pkspr[class*='valuable-item-'] > i { width: 32px; }
.pkspr[class*='valuable-item-'], .pkspr[class*='valuable-item-'] > i { height: 32px; }
.pkspr[class*='wonder-launcher-'], .pkspr[class*='wonder-launcher-'] > i { width: 32px; }
.pkspr[class*='wonder-launcher-'], .pkspr[class*='wonder-launcher-'] > i { height: 32px; }
.pkspr[class*='z-crystals-'], .pkspr[class*='z-crystals-'] > i { width: 32px; }
.pkspr[class*='z-crystals-'], .pkspr[class*='z-crystals-'] > i { height: 32px; }
.pkspr[class*='memory-'], .pkspr[class*='memory-'] > i { width: 32px; }
.pkspr[class*='memory-'], .pkspr[class*='memory-'] > i { height: 32px; }

/*# sourceMappingURL=pokesprite.css.map */
